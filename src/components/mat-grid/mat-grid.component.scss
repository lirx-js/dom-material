@use 'mat-grid.variables' as mat-grid;


:host {
  display: block;
  position: relative;
  width: 100%;

  $container-width: 100%;
  $container-width-including-gap: calc(#{$container-width} + #{mat-grid.$mat-grid-gap-x});

  $container-height: 100%;
  $container-height-including-gap: calc(#{$container-height} + #{mat-grid.$mat-grid-gap-y});
  $container-height-computed: calc((#{$container-width-including-gap} * (#{mat-grid.$mat-grid-rows} / #{mat-grid.$mat-grid-columns})) - #{mat-grid.$mat-grid-gap-y});

  $item-width-including-gap: calc(#{$container-width-including-gap} / #{mat-grid.$mat-grid-columns});
  $item-height-including-gap: calc((#{100%} + #{mat-grid.$mat-grid-gap-y}) / #{mat-grid.$mat-grid-rows});


  padding-bottom: $container-height-computed;
  overflow: hidden;

  & > * {
    position: absolute;
    overflow: hidden;

    $width: calc((#{$item-width-including-gap} * #{mat-grid.$mat-grid-item-width}) - #{mat-grid.$mat-grid-gap-x});
    $left: calc(#{$item-width-including-gap} *  #{mat-grid.$mat-grid-item-left});

    $height: calc((#{$item-height-including-gap} * #{mat-grid.$mat-grid-item-height}) - #{mat-grid.$mat-grid-gap-y});
    $top: calc(#{$item-height-including-gap} * #{mat-grid.$mat-grid-item-top});

    left: $left;
    width: $width;
    height: $height;
    top: $top;
  }
}
